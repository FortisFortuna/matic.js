(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{251:function(t,e,r){"use strict";r.r(e);var n={components:{Layout:r(176).a}},o=r(14),component=Object(o.a)(n,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("Layout",{attrs:{title:"withdrawExitFaster erc721 plasma  ",description:"Get started with maticjs",keywords:"plasma client, erc721, withdrawExitFaster, polygon, sdk",contentSrc:"/home/runner/work/matic.js/matic.js/content/docs/plasma/erc721/withdraw-exit-faster.md"}},[r("h1",{attrs:{id:"withdrawexitfaster"}},[t._v("withdrawExitFaster")]),t._v(" "),r("p",[r("code",[t._v("withdrawExitFaster")]),t._v(" method can be used to approve all tokens.")]),t._v(" "),r("p",[t._v("It is fast because it generates proof in backend. The backend can be configured with dedicated private rpc.")]),t._v(" "),r("p",[r("strong",[t._v("Note")]),t._v("- withdrawStart transaction must be checkpointed in order to exit the withdraw.")]),t._v(" "),r("pre",[r("code",[t._v("const erc721RootToken = plasmaClient.erc721(<root token address>, true);\n\nconst approveResult = await erc721RootToken.withdrawExitFaster(<burn tx hash>);\n\nconst txHash = await approveResult.getTransactionHash();\n\nconst txReceipt = await approveResult.getReceipt();\n")])])])}),[],!1,null,null,null);e.default=component.exports}}]);